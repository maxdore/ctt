entrypoints Module, Exp ;

comment "--" ;
comment "{-" "-}" ;

layout "where", "split" ;

Module.   Module ::= "module" AIdent "where" "{" [Decl] "}" ;


DeclDef.             Decl ::= AIdent [Tele] ":" Exp "=" Exp ;
DeclData.            Decl ::= "data" AIdent [Tele] "=" [Label] ;
DeclSplit.           Decl ::= AIdent [Tele] ":" Exp "=" "split" "{" [Branch] "}" ;
separator            Decl ";" ;

Lam.          Exp  ::= "\\" [Tele] "->" Exp ;
Fun.          Exp1 ::= Exp2 "->" Exp1 ;
Pi.           Exp1 ::= [Tele] "->" Exp1 ;
App.          Exp2 ::= Exp2 Exp3 ;
Var.          Exp3 ::= AIdent ;
Type.         Exp3 ::= "Type" ;
coercions Exp 3 ;
separator nonempty Exp "," ;


OBranch.   Branch ::= AIdent [AIdent] "->" Exp ;
separator Branch ";" ;

OLabel.   Label ::= AIdent [Tele] ;
separator Label "|" ;

NTele.     Tele ::= "(" AIdent [AIdent] ":" Exp ")" ;
terminator Tele "" ;

position token AIdent (letter (letter | digit | '_')*) ;
separator AIdent "" ;
